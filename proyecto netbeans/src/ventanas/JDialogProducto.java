/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ventanas;

import herramientas.ManipulaArchivos;
import herramientas.ManipulaCarrito;
import herramientas.ManipulaEmpleados;
import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author edenj
 */
public class JDialogProducto extends javax.swing.JDialog {

    int posProducto = -1;
    String nombreProducto = "";
    ArrayList <clases.Producto> productos;
    String categorias[];
    boolean admin;
    Frame ventana;
    /**
     * Creates new form JDialogCarritoAgregarProducto
     */
    public JDialogProducto(java.awt.Frame parent, boolean modal, ArrayList <clases.Producto> productos, String categorias[], boolean admin) {
        super(parent, modal);
        this.productos = productos;
        this.categorias = categorias;
        this.admin = admin;
        this.ventana = parent;
        initComponents();
        llenarCategorias();
        jTableProductos.clearSelection();
        jTableProductos.getTableHeader().setReorderingAllowed(false);
        jButtonAgregar.setVisible(admin);
        jButtonModifica.setVisible(admin);
        jButtonElimina.setVisible(admin);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jLabelCategoria = new javax.swing.JLabel();
        jTextFieldProductoNombre = new javax.swing.JTextField();
        jLabelProducto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProductos = new javax.swing.JTable();
        jButtonAgregar = new javax.swing.JButton();
        jButtonModifica = new javax.swing.JButton();
        jButtonElimina = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jComboBoxCategoria.setFont(new java.awt.Font("Consolas", 2, 16)); // NOI18N
        jComboBoxCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxCategoriaItemStateChanged(evt);
            }
        });

        jLabelCategoria.setFont(new java.awt.Font("Consolas", 2, 16)); // NOI18N
        jLabelCategoria.setText("Categor√≠a: ");

        jTextFieldProductoNombre.setFont(new java.awt.Font("Consolas", 2, 16)); // NOI18N
        jTextFieldProductoNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldProductoNombreKeyTyped(evt);
            }
        });

        jLabelProducto.setFont(new java.awt.Font("Consolas", 2, 15)); // NOI18N
        jLabelProducto.setText("Producto: ");

        jTableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProductosMouseClicked(evt);
            }
        });
        jTableProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableProductosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProductos);

        jButtonAgregar.setFont(new java.awt.Font("Consolas", 2, 14)); // NOI18N
        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jButtonModifica.setFont(new java.awt.Font("Consolas", 2, 14)); // NOI18N
        jButtonModifica.setText("Modificar");
        jButtonModifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificaActionPerformed(evt);
            }
        });

        jButtonElimina.setFont(new java.awt.Font("Consolas", 2, 14)); // NOI18N
        jButtonElimina.setText("Eliminar");
        jButtonElimina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelProducto)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldProductoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelCategoria)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAgregar)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonModifica)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonElimina)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCategoria))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldProductoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelProducto))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModifica, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonElimina, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldProductoNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProductoNombreKeyTyped
        posProducto = herramientas.ManipulaCarrito.buscaProducto(jTableProductos, jTextFieldProductoNombre.getText());
        int fila = jTableProductos.getSelectedRow();
        if (fila >= 0) {
            nombreProducto = jTableProductos.getModel().getValueAt(fila, 0).toString();
        }
        jTableProductosMouseClicked(null);
    }//GEN-LAST:event_jTextFieldProductoNombreKeyTyped

    private void jComboBoxCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaItemStateChanged
        herramientas.ManipulaCarrito.obtenerProductoCategoria(jComboBoxCategoria.getSelectedItem().toString(), jTableProductos, productos);
        jTableProductosMouseClicked(null);
    }//GEN-LAST:event_jComboBoxCategoriaItemStateChanged

    private void jTableProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProductosMouseClicked
        int fila = jTableProductos.getSelectedRow();
        if (fila >= 0) {
            nombreProducto = jTableProductos.getModel().getValueAt(fila, 0).toString();
        }
    }//GEN-LAST:event_jTableProductosMouseClicked

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        jTableProductosMouseClicked(null);
        this.dispose();
        new JDialogAgregaProducto(ventana, true, productos, categorias, 0,"").setVisible(true);
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jTableProductosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableProductosKeyReleased
        jTableProductosMouseClicked(null);
    }//GEN-LAST:event_jTableProductosKeyReleased

    private void jButtonModificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificaActionPerformed
        jTableProductosMouseClicked(null);
        if (!"".equals(nombreProducto)) {
            this.dispose();
            new JDialogAgregaProducto(ventana, true, productos, categorias, 1, nombreProducto).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Favor de tener seleccionado el producto a agregar");
        }
    }//GEN-LAST:event_jButtonModificaActionPerformed

    private void jButtonEliminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminaActionPerformed
        jTableProductosMouseClicked(null);
        if (!"".equals(nombreProducto)) {
            clases.Producto tmp = ManipulaCarrito.buscaNombreProducto(productos, nombreProducto);
            int confirm = 1;
            if (tmp != null) {
                confirm = JOptionPane.showConfirmDialog(null,
                        ("¬øSeguro que desea dar de baja el producto " + tmp.getNombreProducto()+ "?"),
                        "Confirmaci√≥n de Baja",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.WARNING_MESSAGE);
            }
            if (confirm == 0) {
                productos.remove(tmp);
                JOptionPane.showMessageDialog(this, "Productos Dado de Baja");
                ManipulaArchivos.guarda("productos.dat", productos);
                herramientas.ManipulaCarrito.obtenerProductoCategoria(jComboBoxCategoria.getSelectedItem().toString(), jTableProductos, productos);
                jTableProductosMouseClicked(null);
            }
            if (productos.isEmpty()) {
                jButtonModifica.setEnabled(false);
                jButtonElimina.setEnabled(false);
            }
            herramientas.ManipulaCarrito.obtenerProductoCategoria(jComboBoxCategoria.getSelectedItem().toString(), jTableProductos, productos);
        } else {
            JOptionPane.showMessageDialog(this, "Favor de tener seleccionado el producto a agregar");
        }
    }//GEN-LAST:event_jButtonEliminaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonElimina;
    private javax.swing.JButton jButtonModifica;
    private javax.swing.JComboBox<String> jComboBoxCategoria;
    private javax.swing.JLabel jLabelCategoria;
    private javax.swing.JLabel jLabelProducto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProductos;
    private javax.swing.JTextField jTextFieldProductoNombre;
    // End of variables declaration//GEN-END:variables
    void llenarCategorias() {
        herramientas.ManipulaCarrito.llenarCombo(categorias, jComboBoxCategoria);
    }
}
